{"ast":null,"code":"import { filterValue, addContact, deleteItem } from './contactActions';\nconst initialState = {\n  contacts: [],\n  filter: ''\n};\n\nconst contactReducer = (state = { ...initialState\n}, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case filterValue.type:\n      return { ...state,\n        filter: payload\n      };\n\n    case addContact.type:\n      return { ...state,\n        contacts: [...state.contacts, payload]\n      };\n\n    case deleteItem.type:\n      return { ...state,\n        contacts: [...state.contacts.filter(contact => contact.id !== payload)]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default contactReducer;","map":{"version":3,"sources":["D:/GO/goit-react-hw-06-phonebook/src/components/redux/contactReducer.js"],"names":["filterValue","addContact","deleteItem","initialState","contacts","filter","contactReducer","state","type","payload","contact","id"],"mappings":"AACA,SAAQA,WAAR,EAAoBC,UAApB,EAA+BC,UAA/B,QAAgD,kBAAhD;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,EADO;AAEjBC,EAAAA,MAAM,EAAE;AAFS,CAArB;;AAKA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAG,EAAC,GAAGJ;AAAJ,CAAT,EACC;AAACK,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CADD,KACqB;AACxC,UAAQD,IAAR;AACI,SAAKR,WAAW,CAACQ,IAAjB;AACI,aAAQ,EAAC,GAAGD,KAAJ;AAAUF,QAAAA,MAAM,EAAEI;AAAlB,OAAR;;AACJ,SAAKR,UAAU,CAACO,IAAhB;AACI,aAAQ,EAAC,GAAGD,KAAJ;AAAUH,QAAAA,QAAQ,EAAE,CAAC,GAAGG,KAAK,CAACH,QAAV,EAAmBK,OAAnB;AAApB,OAAR;;AACJ,SAAKP,UAAU,CAACM,IAAhB;AACI,aAAQ,EAAC,GAAGD,KAAJ;AAAWH,QAAAA,QAAQ,EAAC,CAAC,GAAGG,KAAK,CAACH,QAAN,CAAeC,MAAf,CAAuBK,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAcF,OAAjD,CAAJ;AAApB,OAAR;;AACJ;AACI,aAAOF,KAAP;AARR;AAUH,CAZD;;AAaA,eAAeD,cAAf","sourcesContent":["\r\nimport {filterValue,addContact,deleteItem} from './contactActions'\r\n\r\n\r\nconst initialState = {\r\n    contacts: [],\r\n    filter: ''\r\n}\r\n\r\nconst contactReducer = (state = {...initialState},\r\n                        {type, payload}) => {\r\n    switch (type) {\r\n        case filterValue.type:\r\n            return ({...state,filter: payload})\r\n        case addContact.type:\r\n            return ({...state,contacts: [...state.contacts,payload]})\r\n        case deleteItem.type:\r\n            return ({...state, contacts:[...state.contacts.filter((contact) => contact.id!== payload)]})\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default contactReducer;"]},"metadata":{},"sourceType":"module"}